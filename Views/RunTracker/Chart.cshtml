@model IEnumerable<SampleCrudApp.Models.RunTracker>

@{
    ViewData["Title"] = "Run Distance Chart";
}

<head>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background: #0f172a;
            color: #e5e7eb;
            text-align: center;
        }

        .container {
            max-width: 1000px;
            margin: 50px auto;
            padding: 25px;
            border-radius: 15px;
            backdrop-filter: blur(10px);
            background: rgba(255, 255, 255, 0.05);
            box-shadow: 0px 10px 25px rgba(0, 0, 0, 0.3);
        }

        h2 {
            font-size: 28px;
            font-weight: 600;
            color: #facc15;
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-bottom: 20px;
        }

        .row {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            gap: 20px;
        }

        .chart-container {
            flex: 2;
            min-width: 600px;
            max-width: 800px;
            height: 400px;
            padding: 20px;
            background: rgba(255, 255, 255, 0.08);
            border-radius: 15px;
            box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.3);
        }

        .data-container {
            flex: 1;
            min-width: 250px;
            padding: 20px;
            border-radius: 15px;
            background: rgba(255, 255, 255, 0.1);
            box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.3);
            transition: transform 0.3s ease-in-out;
        }

        .data-container:hover {
            transform: scale(1.05);
        }

        .data-list {
            font-size: 18px;
            font-weight: 500;
            margin-bottom: 10px;
            padding: 12px;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
            box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.2);
            transition: background 0.3s ease-in-out;
        }

        .data-list:hover {
            background: rgba(255, 255, 255, 0.2);
        }

        @@media (max-width: 768px) {
            .row {
                flex-direction: column;
                align-items: center;
            }
            .chart-container, .data-container {
                min-width: 100%;
            }
        }
    </style>
</head>

<body>
    <div class="container">
        <h2>Distance Chart for Past Runs</h2>

        <div class="row">
            <div class="chart-container">
                <canvas id="distanceChart"></canvas>
            </div>

            <div class="data-container">
                <div class="data-list">🏃‍♂️ >=3km & <5km : <span id="total3to5km">0</span></div>
                <div class="data-list">🔥 >=5km & <10km : <span id="total5to10km">0</span></div>
                <div class="data-list">💪 >=10km & <15km : <span id="total10to15km">0</span></div>
                <div class="data-list">⚡ >=15km & <21km : <span id="total15to21km">0</span></div>
                <div class="data-list">🏅 >=21km & <42km : <span id="total21to42km">0</span></div>
            </div>
        </div>
    </div>

    <script>
        var distances = @Html.Raw(Json.Serialize(Model.Select(r => r.Distance).ToList()));

        var count3to5km = distances.filter(d => d >= 3 && d < 5).length;
        var count5to10km = distances.filter(d => d >= 5 && d < 10).length;
        var count10to15km = distances.filter(d => d >= 10 && d < 15).length;
        var count15to21km = distances.filter(d => d >= 15 && d < 21).length;
        var count21to42km = distances.filter(d => d >= 21 && d < 42).length;

        document.getElementById('total3to5km').innerText = count3to5km;
        document.getElementById('total5to10km').innerText = count5to10km;
        document.getElementById('total10to15km').innerText = count10to15km;
        document.getElementById('total15to21km').innerText = count15to21km;
        document.getElementById('total21to42km').innerText = count21to42km;

        var ctx = document.getElementById('distanceChart').getContext('2d');

        function createGradient(ctx, color1, color2) {
            let gradient = ctx.createLinearGradient(0, 0, 0, 400);
            gradient.addColorStop(0, color1);
            gradient.addColorStop(1, color2);
            return gradient;
        }

        var distanceChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['>=3km & <5km', '>=5km & <10km', '>=10km & <15km', '>=15km & <21km', '>=21km & <42km'],
                datasets: [{
                    label: 'Runs Count',
                    data: [count3to5km, count5to10km, count10to15km, count15to21km, count21to42km],
                    backgroundColor: [
                        createGradient(ctx, '#facc15', '#eab308'), // 3-5km
                        createGradient(ctx, '#f43f5e', '#e11d48'), // 5-10km
                        createGradient(ctx, '#6366f1', '#4f46e5'), // 10-15km
                        createGradient(ctx, '#06b6d4', '#0891b2'), // 15-21km
                        createGradient(ctx, '#10b981', '#047857')  // 21-42km
                    ],
                    borderWidth: 2,
                    borderRadius: 8,
                    barThickness: 40,
                    hoverOffset: 10
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    x: {
                        ticks: { color: '#e5e7eb', font: { size: 14 } }
                    },
                    y: {
                        beginAtZero: true,
                        ticks: { color: '#e5e7eb', font: { size: 14 }, stepSize: 1 }
                    }
                },
                plugins: {
                    legend: { display: false },
                    tooltip: {
                        backgroundColor: 'rgba(0, 0, 0, 0.8)',
                        titleColor: '#facc15',
                        bodyColor: '#fff',
                        borderColor: '#facc15',
                        borderWidth: 1
                    }
                }
            }
        });
    </script>
</body>
