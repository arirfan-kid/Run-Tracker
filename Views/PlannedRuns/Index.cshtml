@{
    ViewData["Title"] = "Planned Runs";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Planned Runs</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background: #0f172a;
            color: white;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }

        .container {
            width: 90%;
            max-width: 900px;
            background: rgba(255, 255, 255, 0.1);
            padding: 20px;
            border-radius: 15px;
            backdrop-filter: blur(10px);
            box-shadow: 0px 4px 15px rgba(255, 255, 255, 0.1);
            max-height: 80vh;
            overflow: auto;
        }

        .form-section {
            margin-bottom: 20px;
        }

        h2,
        h3 {
            text-align: center;
        }

        .input-group {
            margin-bottom: 15px;
        }

        label {
            display: block;
            font-size: 14px;
            margin-bottom: 5px;
        }

        input,
        select {
            width: 100%;
            padding: 10px;
            border-radius: 8px;
            border: 1px solid white;
            outline: none;
            font-size: 16px;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            box-sizing: border-box;
            background-clip: padding-box;
            -webkit-border-radius: 8px;
            -moz-border-radius: 8px;
        }

        button {
            width: 100%;
            padding: 10px;
            background: #ff4b2b;
            color: white;
            font-size: 16px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: 0.3s;
        }

        button:hover {
            background: #5A4FCF;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            text-align: center;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 8px;
        }

        th,
        td {
            padding: 10px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.3);
        }

        th {
            background: rgba(255, 255, 255, 0.3);
        }

        .icon-btn {
            background: none;
            border: none;
            color: white;
            font-size: 18px;
            cursor: pointer;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="form-section">
            <h2>Plan Your Runs</h2>
            <form id="runForm" method="post">
                <div class="input-group">
                    <label for="date">Date:</label>
                    <input type="date" id="date" required>
                </div>
                <div class="input-group">
                    <label for="time">Time:</label>
                    <select id="time" required></select>
                </div>
                <div class="input-group">
                    <label for="km">Distance (km):</label>
                    <input type="number" id="km" step="0.1" required>
                </div>
                <div class="input-group">
                    <label for="type">Type of Run:</label>
                    <select id="type" required>
                        <option value="Interval">Interval</option>
                        <option value="Recovery">Recovery</option>
                        <option value="Long">Long</option>
                        <option value="Tempo">Tempo</option>
                    </select>
                </div>
                <button type="submit" asp-page-handler="Post">Add to Plan</button>
            </form>
        </div>
        <div class="list-section">
            <h3>Your Planned Runs</h3>
            <table>
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Time</th>
                        <th>Distance (km)</th>
                        <th>Type</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="runList"></tbody>
            </table>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            populateTimeDropdown();
            loadPlannedRuns();
        });

        function populateTimeDropdown() {
            const timeSelect = document.getElementById("time");
            for (let hour = 00; hour <= 23; hour++) {
                for (let minute of ["00", "15", "30", "45"]) {
                    let time = `${hour}:${minute}`;
                    let option = new Option(time, time);
                    timeSelect.add(option);
                }
            }
        }

        async function loadPlannedRuns() {
            const response = await fetch('/api/PlannedRuns');
            const runs = await response.json();
            const runList = document.getElementById("runList");
            runList.innerHTML = "";

            runs.forEach(run => {
                const row = document.createElement("tr");
                row.innerHTML = `
                    <td>${new Date(run.date).toLocaleDateString()}</td>
                    <td>${run.time}</td>
                    <td>${run.distance}</td>
                    <td>${run.runType}</td>
                    <td>
                        <button class="icon-btn" onclick="deleteRun(${run.id})">
                            <i class="fa fa-trash" style="color: #f44336;"></i>
                        </button>
                    </td>
                `;
                runList.appendChild(row);
            });
        }

        document.getElementById("runForm").addEventListener("submit", async function (event) {
            event.preventDefault();
            const newRun = {
                date: document.getElementById("date").value,
                time: document.getElementById("time").value,
                distance: parseFloat(document.getElementById("km").value),
                runType: document.getElementById("type").value,
            };

            const response = await fetch('/api/PlannedRuns', {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(newRun)
            });
            if (response.ok) loadPlannedRuns();
        });

        async function deleteRun(id) {
            const response = await fetch(`/api/PlannedRuns/${id}`, { method: "DELETE" });
            console.log("Delete Run Response:", response.status);
            loadPlannedRuns();
        }
    </script>
</body>

</html>
